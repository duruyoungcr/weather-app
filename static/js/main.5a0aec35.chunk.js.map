{"version":3,"sources":["components/Loader/index.js","store/weather/index.js","components/DayCard/index.js","components/CardsContainer/index.js","components/ChartContainer/index.js","App.js","store/index.js","index.js","components/DayCard/DayCard.module.css","components/ChartContainer/ChartContainer.module.css","components/CardsContainer/CardsContainer.module.css"],"names":["Loader","Box","sx","display","CircularProgress","getWeatherData","createAsyncThunk","a","unit","Axios","get","process","response","data","weatherSlice","createSlice","name","initialState","loading","reducers","setLoading","state","action","payload","extraReducers","fulfilled","error","rejected","alert","actions","increment","decrement","incrementByAmount","DayCard","day","index","handleDaySelection","selectedIndex","IMAGE_PATH","weather","icon","motion","div","whileHover","y","transition","duration","onClick","Card","className","styles","selected","card","backgroundColor","CardContent","justifyContent","alignItems","flexDirection","height","width","color","Typography","variant","component","gutterBottom","minWidth","main","temp","CardMedia","image","alt","description","objectFit","maxWidth","textTransform","dt_txt","split","CardsContainer","days","useEffect","container","pagination","breakPoints","itemsToShow","itemPadding","map","dt","ChartContainer","useState","reducedDay","setReducedDay","configureChart","window","outerWidth","chartType","loader","options","chart","title","rootProps","App","useSelector","app","setDays","seperatedArray","setSeperatedArray","selectedDay","setSelectedDay","setUnit","setSelectedIndex","dispatch","useDispatch","fetchData","list","getDays","handleChange","event","target","value","i","temporary","j","length","slice","push","array","data-testid","ease","h1","initial","animate","FormControlLabel","control","Radio","checked","onChange","inputProps","label","Button","size","store","configureStore","reducer","weatherReducer","devTools","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.5a0aec35.chunk.js","sourcesContent":["import CircularProgress from '@mui/material/CircularProgress';\r\nimport Box from '@mui/material/Box';\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Box sx={{ display: 'flex' }}>\r\n            <CircularProgress />\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Loader;\r\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport Axios from 'axios'\r\n\r\nconst APPID = process.env.REACT_APP_OPEN_WEATHER_APP_ID\r\n\r\nexport const getWeatherData = createAsyncThunk('weather/getWeatherData', async ({ unit }) => {\r\n    const response = await Axios.get(`https://api.openweathermap.org/data/2.5/forecast?q=Munich,de&APPID=${APPID}&cnt=40&units=${unit}`);\r\n    return response.data;\r\n})\r\n\r\n\r\nexport const weatherSlice = createSlice({\r\n    name: 'weather',\r\n    initialState: {\r\n        data: [],\r\n        loading: true,\r\n    },\r\n    reducers: {\r\n        setLoading: (state, action) => {\r\n            state.loading = action.payload;\r\n        }\r\n    },\r\n    extraReducers: {\r\n        [getWeatherData.fulfilled]: (state, action) => {\r\n            state.error = false;\r\n            state.data = action.payload;\r\n            state.loading = false;\r\n        },\r\n        [getWeatherData.rejected]: (state, action) => {\r\n            alert('An error occurred !')\r\n            state.loading = false;\r\n            state.error = true;\r\n        },\r\n    }\r\n})\r\n\r\nexport const { increment, decrement, incrementByAmount } = weatherSlice.actions\r\n\r\nexport default weatherSlice.reducer","import Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Typography from '@mui/material/Typography';\r\nimport { CardMedia } from '@mui/material';\r\nimport styles from './DayCard.module.css'\r\nimport { motion } from \"framer-motion\";\r\n\r\n\r\nconst DayCard = ({ day, unit, index, handleDaySelection, selectedIndex }) => {\r\n    const IMAGE_PATH = `http://openweathermap.org/img/wn/${day?.weather[0].icon}.png`\r\n    return (\r\n        <motion.div\r\n            whileHover={{\r\n                y: -5,\r\n                transition: { duration: 0.2 },\r\n            }}\r\n            onClick={() => handleDaySelection(index)}\r\n        >\r\n            <Card\r\n                className={`${selectedIndex === index && styles.selected} ${styles.card}`}\r\n                sx={{\r\n                    backgroundColor: '#1976D2',\r\n                }}\r\n            >\r\n                <CardContent\r\n                    sx={{\r\n                        display: 'flex',\r\n                        justifyContent: 'space-between',\r\n                        alignItems: 'center',\r\n                        flexDirection: 'column',\r\n                        height: '100%',\r\n                        width: '100%',\r\n                        color: 'white'\r\n                    }}\r\n                >\r\n                    <Typography color=\"text.white\" variant=\"h6\" component='div' gutterBottom>\r\n                        Temperature\r\n                    </Typography>\r\n                    <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', width: '100%' }}>\r\n                        <Typography color=\"text.primary\" component='h6' sx={{ minWidth: 'max-content', color: 'white' }}>\r\n                            {`${day?.main.temp}${unit === 'metric' ? 'C' : 'F'}`}\r\n                        </Typography>\r\n                        <CardMedia\r\n                            component=\"img\"\r\n                            image={IMAGE_PATH}\r\n                            alt={day?.weather[0].description}\r\n                            width=\"64\"\r\n                            height=\"64\"\r\n                            sx={{\r\n                                objectFit: 'contain',\r\n                                maxWidth: 'min-content',\r\n                            }}\r\n                        />\r\n                    </Box>\r\n                    <Typography color=\"text.white\" component='p' sx={{ minWidth: 'max-content', textTransform: 'capitalize' }}>\r\n                        {day?.weather[0].description}\r\n                    </Typography>\r\n                    <Typography color=\"text.white\" component='p'>\r\n                        {day?.dt_txt.split(' ')[0]}\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card >\r\n        </motion.div>\r\n    )\r\n}\r\n\r\nexport default DayCard\r\n","import { useEffect } from \"react\"\r\nimport Carousel from \"react-elastic-carousel\"\r\nimport DayCard from \"../DayCard\"\r\nimport styles from './CardsContainer.module.css'\r\n\r\nconst CardsContainer = ({ days, unit, handleDaySelection, selectedIndex }) => {\r\n    useEffect(() => {\r\n    }, [unit, days])\r\n    const breakPoints = [\r\n        { width: 1, itemsToShow: 1, pagination: false },\r\n        { width: 450, itemsToShow: 3, itemPadding: [0, 10] },\r\n        { width: 700, itemsToShow: 3, itemPadding: [0, 10] },\r\n    ]\r\n    return (\r\n        <div className={styles.container}>\r\n            <Carousel\r\n                pagination={false}\r\n                breakPoints={breakPoints}\r\n            >\r\n                {days?.map((day, index) => (\r\n                    <DayCard\r\n                        day={day}\r\n                        index={index}\r\n                        key={day?.dt}\r\n                        unit={unit}\r\n                        handleDaySelection={handleDaySelection}\r\n                        selectedIndex={selectedIndex}\r\n                    />\r\n                ))}\r\n            </Carousel>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardsContainer\r\n","import { useEffect, useState } from \"react\"\r\nimport Chart from \"react-google-charts\"\r\nimport Loader from \"../Loader\"\r\nimport styles from './ChartContainer.module.css'\r\n\r\n\r\n\r\nconst ChartContainer = ({ day }) => {\r\n    const [reducedDay, setReducedDay] = useState([])\r\n    useEffect(() => {\r\n        configureChart()\r\n    }, [day])\r\n\r\n    const configureChart = () => {\r\n        setReducedDay(day.map(day => {\r\n            return [day.dt_txt.split(' ')[1], day.main.temp]\r\n        }))\r\n    }\r\n    const getWidth = () => {\r\n        if (window.outerWidth > 450) {\r\n            return '500px';\r\n        }\r\n        return '100%'\r\n    }\r\n    return (\r\n        <div className={styles.container}>\r\n            <Chart\r\n                width={getWidth()}\r\n                height={'300px'}\r\n                chartType=\"Bar\"\r\n                loader={\r\n                    <div className={styles.loader}>\r\n                        <Loader />\r\n                    </div>\r\n                }\r\n                data={[\r\n                    ['Time', 'Temp'],\r\n                    ...reducedDay\r\n                ]}\r\n                options={{\r\n                    chart: {\r\n                        title: `Daily Weather Forcast - ${day[0]?.dt_txt.split(' ')[0]}`,\r\n                    },\r\n                }}\r\n                // For tests\r\n                rootProps={{ 'data-testid': '2' }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChartContainer\r\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './App.css';\nimport Loader from './components/Loader';\nimport { getWeatherData } from './store/weather';\nimport { motion } from \"framer-motion\";\nimport { Button, FormControlLabel, Radio } from '@mui/material';\nimport CardsContainer from './components/CardsContainer';\nimport ChartContainer from './components/ChartContainer';\n\n\nfunction App() {\n  const loading = useSelector(state => state.app.loading);\n  const error = useSelector(state => state.app.error);\n  const data = useSelector(state => state.app.data)\n  const [days, setDays] = useState([])\n  const [seperatedArray, setSeperatedArray] = useState([])\n  const [selectedDay, setSelectedDay] = useState([])\n  const [unit, setUnit] = useState('metric')\n  const [selectedIndex, setSelectedIndex] = useState('')\n  const dispatch = useDispatch()\n  const fetchData = () => {\n    dispatch(getWeatherData({ unit }))\n  }\n  useEffect(() => {\n    fetchData()\n  }, [unit])\n\n  useEffect(() => {\n    if (selectedIndex) {\n      setSelectedDay(seperatedArray[selectedIndex])\n    }\n  }, [seperatedArray, selectedIndex])\n\n  useEffect(() => {\n    if (data.list) {\n      setDays(getDays(data.list))\n    }\n    return getDays\n  }, [data])\n\n  const handleChange = (event) => {\n    setUnit(event.target.value);\n  };\n\n\n\n  const getDays = (list) => {\n    const seperatedArray = []\n    var i, j = 0, temporary\n    if (list) {\n      for (i = 0; i < list.length; i++) {\n        if (list[i]?.dt_txt?.split(' ')[0] !== list[i + 1]?.dt_txt?.split(' ')[0]) {\n          temporary = list.slice(j, i);\n          j = i + 1;\n          seperatedArray.push(temporary);\n        }\n\n      }\n      setSeperatedArray(seperatedArray)\n      return seperatedArray.map(array => array[0]);\n    }\n  }\n\n  const handleDaySelection = (index) => {\n    setSelectedIndex(index)\n    setSelectedDay(seperatedArray[index])\n  }\n\n  return (\n    <div className=\"App\">\n      {loading ? <div className=\"loader\" data-testid='loader'><Loader /></div> :\n        !error &&\n        <motion.div\n          transition={{ ease: \"easeOut\", duration: 2 }}\n          className='container'\n        >\n          <motion.div>\n            <motion.h1\n              className='title'\n              initial={{ y: -100 }}\n              animate={{ y: 0 }}\n              transition={{ ease: 'easeInOut', duration: 1 }}\n            >\n              Berlin Weather Forecast\n            </motion.h1>\n            <motion.div\n              className='actions'\n            >\n              <FormControlLabel\n                control={\n                  <Radio\n                    checked={unit === 'metric'}\n                    onChange={handleChange}\n                    value=\"metric\"\n                    name=\"celcius\"\n                    inputProps={{ 'aria-label': 'Metric' }}\n                  />\n                }\n                label=\"Celcius\"\n              />\n              <FormControlLabel\n                control={\n                  <Radio\n                    checked={unit === 'imperial'}\n                    onChange={handleChange}\n                    value=\"imperial\"\n                    name=\"farenheit\"\n                    inputProps={{ 'aria-label': 'Imperial' }}\n                  />\n                }\n                label=\"Farenheit\"\n              />\n            </motion.div>\n            <motion.div className='refresh'>\n              <Button\n                variant=\"contained\"\n                size=\"large\"\n                onClick={() => fetchData()}\n              >\n                Refresh\n              </Button>\n            </motion.div>\n          </motion.div>\n          <motion.div>\n            <CardsContainer days={days} unit={unit} handleDaySelection={handleDaySelection} selectedIndex={selectedIndex} />\n          </motion.div>\n          {selectedDay.length > 0 &&\n            <motion.div>\n              <ChartContainer day={selectedDay} key={seperatedArray} />\n            </motion.div>\n          }\n        </motion.div>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport weatherReducer from './weather'\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        app: weatherReducer,\r\n    },\r\n    devTools: process.env.NODE_ENV !== 'production',\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"DayCard_card__37KEJ\",\"selected\":\"DayCard_selected__2PQ5U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"ChartContainer_loader__1LOKr\",\"container\":\"ChartContainer_container__2kZAP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CardsContainer_container__1C2-H\"};"],"sourceRoot":""}